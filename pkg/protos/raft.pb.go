// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolVersion int32

const (
	ProtocolVersion_ProtocolVersionMin ProtocolVersion = 0
	ProtocolVersion_ProtocolVersionMax ProtocolVersion = 3
)

var ProtocolVersion_name = map[int32]string{
	0: "ProtocolVersionMin",
	3: "ProtocolVersionMax",
}

var ProtocolVersion_value = map[string]int32{
	"ProtocolVersionMin": 0,
	"ProtocolVersionMax": 3,
}

func (x ProtocolVersion) String() string {
	return proto.EnumName(ProtocolVersion_name, int32(x))
}

func (ProtocolVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

type SnapshotVersion int32

const (
	SnapshotVersion_SnapshotVersionMin SnapshotVersion = 0
	SnapshotVersion_SnapshotVersionMax SnapshotVersion = 1
)

var SnapshotVersion_name = map[int32]string{
	0: "SnapshotVersionMin",
	1: "SnapshotVersionMax",
}

var SnapshotVersion_value = map[string]int32{
	"SnapshotVersionMin": 0,
	"SnapshotVersionMax": 1,
}

func (x SnapshotVersion) String() string {
	return proto.EnumName(SnapshotVersion_name, int32(x))
}

func (SnapshotVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

type LogType int32

const (
	LogType_LogCommand              LogType = 0
	LogType_LogNoop                 LogType = 1
	LogType_LogAddPeerDeprecated    LogType = 2
	LogType_LogRemovePeerDeprecated LogType = 3
	LogType_LogBarrier              LogType = 4
	LogType_LogConfiguration        LogType = 5
)

var LogType_name = map[int32]string{
	0: "LogCommand",
	1: "LogNoop",
	2: "LogAddPeerDeprecated",
	3: "LogRemovePeerDeprecated",
	4: "LogBarrier",
	5: "LogConfiguration",
}

var LogType_value = map[string]int32{
	"LogCommand":              0,
	"LogNoop":                 1,
	"LogAddPeerDeprecated":    2,
	"LogRemovePeerDeprecated": 3,
	"LogBarrier":              4,
	"LogConfiguration":        5,
}

func (x LogType) String() string {
	return proto.EnumName(LogType_name, int32(x))
}

func (LogType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

type RPCHeader struct {
	ProtocolVersion      ProtocolVersion `protobuf:"varint,1,opt,name=ProtocolVersion,proto3,enum=protos.ProtocolVersion" json:"ProtocolVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RPCHeader) Reset()         { *m = RPCHeader{} }
func (m *RPCHeader) String() string { return proto.CompactTextString(m) }
func (*RPCHeader) ProtoMessage()    {}
func (*RPCHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *RPCHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCHeader.Unmarshal(m, b)
}
func (m *RPCHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCHeader.Marshal(b, m, deterministic)
}
func (m *RPCHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCHeader.Merge(m, src)
}
func (m *RPCHeader) XXX_Size() int {
	return xxx_messageInfo_RPCHeader.Size(m)
}
func (m *RPCHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RPCHeader proto.InternalMessageInfo

func (m *RPCHeader) GetProtocolVersion() ProtocolVersion {
	if m != nil {
		return m.ProtocolVersion
	}
	return ProtocolVersion_ProtocolVersionMin
}

type Log struct {
	Index                uint64   `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Term                 uint64   `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	LogType              LogType  `protobuf:"varint,3,opt,name=LogType,proto3,enum=protos.LogType" json:"LogType,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Extensions           []byte   `protobuf:"bytes,5,opt,name=Extensions,proto3" json:"Extensions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Log) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Log) GetLogType() LogType {
	if m != nil {
		return m.LogType
	}
	return LogType_LogCommand
}

func (m *Log) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Log) GetExtensions() []byte {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type AppendEntriesRequest struct {
	RPCHeader            *RPCHeader `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	Leader               []byte     `protobuf:"bytes,3,opt,name=Leader,proto3" json:"Leader,omitempty"`
	PreviousLogEntry     uint64     `protobuf:"varint,4,opt,name=PreviousLogEntry,proto3" json:"PreviousLogEntry,omitempty"`
	PreviousLogTerm      uint64     `protobuf:"varint,5,opt,name=PreviousLogTerm,proto3" json:"PreviousLogTerm,omitempty"`
	Entries              []*Log     `protobuf:"bytes,6,rep,name=Entries,proto3" json:"Entries,omitempty"`
	LeaderCommitIndex    uint64     `protobuf:"varint,7,opt,name=LeaderCommitIndex,proto3" json:"LeaderCommitIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AppendEntriesRequest) Reset()         { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()    {}
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *AppendEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRequest.Unmarshal(m, b)
}
func (m *AppendEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRequest.Marshal(b, m, deterministic)
}
func (m *AppendEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRequest.Merge(m, src)
}
func (m *AppendEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRequest.Size(m)
}
func (m *AppendEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRequest proto.InternalMessageInfo

func (m *AppendEntriesRequest) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

func (m *AppendEntriesRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeader() []byte {
	if m != nil {
		return m.Leader
	}
	return nil
}

func (m *AppendEntriesRequest) GetPreviousLogEntry() uint64 {
	if m != nil {
		return m.PreviousLogEntry
	}
	return 0
}

func (m *AppendEntriesRequest) GetPreviousLogTerm() uint64 {
	if m != nil {
		return m.PreviousLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetEntries() []*Log {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendEntriesRequest) GetLeaderCommitIndex() uint64 {
	if m != nil {
		return m.LeaderCommitIndex
	}
	return 0
}

type AppendEntriesResponse struct {
	RPCHeader            *RPCHeader `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	LastLog              uint64     `protobuf:"varint,3,opt,name=LastLog,proto3" json:"LastLog,omitempty"`
	Success              bool       `protobuf:"varint,4,opt,name=Success,proto3" json:"Success,omitempty"`
	NoRetryBackoff       bool       `protobuf:"varint,5,opt,name=NoRetryBackoff,proto3" json:"NoRetryBackoff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AppendEntriesResponse) Reset()         { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()    {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *AppendEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResponse.Unmarshal(m, b)
}
func (m *AppendEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResponse.Marshal(b, m, deterministic)
}
func (m *AppendEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResponse.Merge(m, src)
}
func (m *AppendEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResponse.Size(m)
}
func (m *AppendEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResponse proto.InternalMessageInfo

func (m *AppendEntriesResponse) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

func (m *AppendEntriesResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetLastLog() uint64 {
	if m != nil {
		return m.LastLog
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AppendEntriesResponse) GetNoRetryBackoff() bool {
	if m != nil {
		return m.NoRetryBackoff
	}
	return false
}

type RequestVoteRequest struct {
	RPCHeader            *RPCHeader `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	Candidate            []byte     `protobuf:"bytes,3,opt,name=Candidate,proto3" json:"Candidate,omitempty"`
	LastLogIndex         uint64     `protobuf:"varint,4,opt,name=LastLogIndex,proto3" json:"LastLogIndex,omitempty"`
	LastLogTerm          uint64     `protobuf:"varint,5,opt,name=LastLogTerm,proto3" json:"LastLogTerm,omitempty"`
	LeadershipTransfer   bool       `protobuf:"varint,6,opt,name=LeadershipTransfer,proto3" json:"LeadershipTransfer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{4}
}

func (m *RequestVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRequest.Unmarshal(m, b)
}
func (m *RequestVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRequest.Marshal(b, m, deterministic)
}
func (m *RequestVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRequest.Merge(m, src)
}
func (m *RequestVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRequest.Size(m)
}
func (m *RequestVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRequest proto.InternalMessageInfo

func (m *RequestVoteRequest) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

func (m *RequestVoteRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetCandidate() []byte {
	if m != nil {
		return m.Candidate
	}
	return nil
}

func (m *RequestVoteRequest) GetLastLogIndex() uint64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

func (m *RequestVoteRequest) GetLeadershipTransfer() bool {
	if m != nil {
		return m.LeadershipTransfer
	}
	return false
}

type RequestVoteResponse struct {
	RPCHeader            *RPCHeader `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	Peers                []byte     `protobuf:"bytes,3,opt,name=Peers,proto3" json:"Peers,omitempty"`
	Granted              bool       `protobuf:"varint,4,opt,name=Granted,proto3" json:"Granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{5}
}

func (m *RequestVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResponse.Unmarshal(m, b)
}
func (m *RequestVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResponse.Marshal(b, m, deterministic)
}
func (m *RequestVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResponse.Merge(m, src)
}
func (m *RequestVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResponse.Size(m)
}
func (m *RequestVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResponse proto.InternalMessageInfo

func (m *RequestVoteResponse) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

func (m *RequestVoteResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetPeers() []byte {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *RequestVoteResponse) GetGranted() bool {
	if m != nil {
		return m.Granted
	}
	return false
}

type InstallSnapshotRequest struct {
	RPCHeader            *RPCHeader      `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	SnapshotVersion      SnapshotVersion `protobuf:"varint,2,opt,name=SnapshotVersion,proto3,enum=protos.SnapshotVersion" json:"SnapshotVersion,omitempty"`
	Term                 uint64          `protobuf:"varint,3,opt,name=Term,proto3" json:"Term,omitempty"`
	Leader               []byte          `protobuf:"bytes,4,opt,name=Leader,proto3" json:"Leader,omitempty"`
	LastLogIndex         uint64          `protobuf:"varint,5,opt,name=LastLogIndex,proto3" json:"LastLogIndex,omitempty"`
	LastLogTerm          uint64          `protobuf:"varint,6,opt,name=LastLogTerm,proto3" json:"LastLogTerm,omitempty"`
	Peers                []byte          `protobuf:"bytes,7,opt,name=Peers,proto3" json:"Peers,omitempty"`
	Configuration        []byte          `protobuf:"bytes,8,opt,name=Configuration,proto3" json:"Configuration,omitempty"`
	ConfigurationIndex   uint64          `protobuf:"varint,9,opt,name=ConfigurationIndex,proto3" json:"ConfigurationIndex,omitempty"`
	Data                 []byte          `protobuf:"bytes,10,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstallSnapshotRequest) Reset()         { *m = InstallSnapshotRequest{} }
func (m *InstallSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*InstallSnapshotRequest) ProtoMessage()    {}
func (*InstallSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{6}
}

func (m *InstallSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallSnapshotRequest.Unmarshal(m, b)
}
func (m *InstallSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *InstallSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallSnapshotRequest.Merge(m, src)
}
func (m *InstallSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_InstallSnapshotRequest.Size(m)
}
func (m *InstallSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstallSnapshotRequest proto.InternalMessageInfo

func (m *InstallSnapshotRequest) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

func (m *InstallSnapshotRequest) GetSnapshotVersion() SnapshotVersion {
	if m != nil {
		return m.SnapshotVersion
	}
	return SnapshotVersion_SnapshotVersionMin
}

func (m *InstallSnapshotRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *InstallSnapshotRequest) GetLeader() []byte {
	if m != nil {
		return m.Leader
	}
	return nil
}

func (m *InstallSnapshotRequest) GetLastLogIndex() uint64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *InstallSnapshotRequest) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

func (m *InstallSnapshotRequest) GetPeers() []byte {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *InstallSnapshotRequest) GetConfiguration() []byte {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *InstallSnapshotRequest) GetConfigurationIndex() uint64 {
	if m != nil {
		return m.ConfigurationIndex
	}
	return 0
}

func (m *InstallSnapshotRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type InstallSnapshotResponse struct {
	RPCHeader            *RPCHeader `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	Term                 uint64     `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	Success              bool       `protobuf:"varint,3,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *InstallSnapshotResponse) Reset()         { *m = InstallSnapshotResponse{} }
func (m *InstallSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*InstallSnapshotResponse) ProtoMessage()    {}
func (*InstallSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{7}
}

func (m *InstallSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallSnapshotResponse.Unmarshal(m, b)
}
func (m *InstallSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *InstallSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallSnapshotResponse.Merge(m, src)
}
func (m *InstallSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_InstallSnapshotResponse.Size(m)
}
func (m *InstallSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InstallSnapshotResponse proto.InternalMessageInfo

func (m *InstallSnapshotResponse) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

func (m *InstallSnapshotResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *InstallSnapshotResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type TimeoutNowRequest struct {
	RPCHeader            *RPCHeader `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TimeoutNowRequest) Reset()         { *m = TimeoutNowRequest{} }
func (m *TimeoutNowRequest) String() string { return proto.CompactTextString(m) }
func (*TimeoutNowRequest) ProtoMessage()    {}
func (*TimeoutNowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{8}
}

func (m *TimeoutNowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeoutNowRequest.Unmarshal(m, b)
}
func (m *TimeoutNowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeoutNowRequest.Marshal(b, m, deterministic)
}
func (m *TimeoutNowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeoutNowRequest.Merge(m, src)
}
func (m *TimeoutNowRequest) XXX_Size() int {
	return xxx_messageInfo_TimeoutNowRequest.Size(m)
}
func (m *TimeoutNowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeoutNowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimeoutNowRequest proto.InternalMessageInfo

func (m *TimeoutNowRequest) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

type TimeoutNowResponse struct {
	RPCHeader            *RPCHeader `protobuf:"bytes,1,opt,name=RPCHeader,proto3" json:"RPCHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TimeoutNowResponse) Reset()         { *m = TimeoutNowResponse{} }
func (m *TimeoutNowResponse) String() string { return proto.CompactTextString(m) }
func (*TimeoutNowResponse) ProtoMessage()    {}
func (*TimeoutNowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{9}
}

func (m *TimeoutNowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeoutNowResponse.Unmarshal(m, b)
}
func (m *TimeoutNowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeoutNowResponse.Marshal(b, m, deterministic)
}
func (m *TimeoutNowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeoutNowResponse.Merge(m, src)
}
func (m *TimeoutNowResponse) XXX_Size() int {
	return xxx_messageInfo_TimeoutNowResponse.Size(m)
}
func (m *TimeoutNowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeoutNowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimeoutNowResponse proto.InternalMessageInfo

func (m *TimeoutNowResponse) GetRPCHeader() *RPCHeader {
	if m != nil {
		return m.RPCHeader
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.ProtocolVersion", ProtocolVersion_name, ProtocolVersion_value)
	proto.RegisterEnum("protos.SnapshotVersion", SnapshotVersion_name, SnapshotVersion_value)
	proto.RegisterEnum("protos.LogType", LogType_name, LogType_value)
	proto.RegisterType((*RPCHeader)(nil), "protos.RPCHeader")
	proto.RegisterType((*Log)(nil), "protos.Log")
	proto.RegisterType((*AppendEntriesRequest)(nil), "protos.AppendEntriesRequest")
	proto.RegisterType((*AppendEntriesResponse)(nil), "protos.AppendEntriesResponse")
	proto.RegisterType((*RequestVoteRequest)(nil), "protos.RequestVoteRequest")
	proto.RegisterType((*RequestVoteResponse)(nil), "protos.RequestVoteResponse")
	proto.RegisterType((*InstallSnapshotRequest)(nil), "protos.InstallSnapshotRequest")
	proto.RegisterType((*InstallSnapshotResponse)(nil), "protos.InstallSnapshotResponse")
	proto.RegisterType((*TimeoutNowRequest)(nil), "protos.TimeoutNowRequest")
	proto.RegisterType((*TimeoutNowResponse)(nil), "protos.TimeoutNowResponse")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 786 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdb, 0x6e, 0xeb, 0x44,
	0x14, 0xad, 0x63, 0xe7, 0xd2, 0x9d, 0xb6, 0x71, 0x87, 0xd0, 0x9a, 0xb4, 0x94, 0xc8, 0x02, 0x14,
	0x22, 0x54, 0xa4, 0xf0, 0x05, 0x69, 0x5a, 0xa0, 0x92, 0x89, 0xa2, 0x69, 0xd4, 0x07, 0xde, 0x86,
	0x78, 0x92, 0x5a, 0x34, 0x1e, 0x33, 0x33, 0x29, 0xe9, 0x33, 0x6f, 0x3c, 0xf0, 0x09, 0xfc, 0x05,
	0xd2, 0xf9, 0xa9, 0xf3, 0x0b, 0x47, 0x47, 0x1e, 0x5f, 0xea, 0x5b, 0x75, 0xa4, 0x2a, 0x4f, 0xf1,
	0x5e, 0x6b, 0xbc, 0xf7, 0xec, 0xb5, 0x66, 0xb6, 0x03, 0xc0, 0xc9, 0x52, 0x5e, 0x06, 0x9c, 0x49,
	0x86, 0x1a, 0xea, 0x47, 0xd8, 0x53, 0xd8, 0xc7, 0xb3, 0xc9, 0x2f, 0x94, 0xb8, 0x94, 0xa3, 0x31,
	0x74, 0x66, 0x21, 0xbc, 0x60, 0x8f, 0xf7, 0x94, 0x0b, 0x8f, 0xf9, 0x96, 0xd6, 0xd7, 0x06, 0x47,
	0xa3, 0xd3, 0xe8, 0x2d, 0x71, 0x59, 0xa0, 0x71, 0x71, 0xbd, 0xfd, 0xaf, 0x06, 0xba, 0xc3, 0x56,
	0xa8, 0x0b, 0xf5, 0x5b, 0xdf, 0xa5, 0x5b, 0x95, 0xc0, 0xc0, 0x51, 0x80, 0x10, 0x18, 0x73, 0xca,
	0xd7, 0x56, 0x4d, 0x81, 0xea, 0x19, 0x7d, 0x07, 0x4d, 0x87, 0xad, 0xe6, 0xcf, 0x01, 0xb5, 0x74,
	0x55, 0xac, 0x93, 0x14, 0x8b, 0x61, 0x9c, 0xf0, 0xe1, 0xeb, 0xd7, 0x44, 0x12, 0xcb, 0xe8, 0x6b,
	0x83, 0x03, 0xac, 0x9e, 0xd1, 0x05, 0xc0, 0xcd, 0x56, 0x52, 0x3f, 0xac, 0x2e, 0xac, 0xba, 0x62,
	0x32, 0x88, 0xfd, 0x5f, 0x0d, 0xba, 0xe3, 0x20, 0xa0, 0xbe, 0x7b, 0xe3, 0x4b, 0xee, 0x51, 0x81,
	0xe9, 0x9f, 0x1b, 0x2a, 0x24, 0xfa, 0x21, 0xd3, 0xb9, 0xda, 0x65, 0x7b, 0x74, 0x9c, 0x54, 0x4e,
	0x09, 0x9c, 0x51, 0xa7, 0x6a, 0xf3, 0x27, 0xd0, 0x70, 0xa2, 0x0c, 0xba, 0xaa, 0x1c, 0x47, 0x68,
	0x08, 0xe6, 0x8c, 0xd3, 0x27, 0x8f, 0x6d, 0x84, 0xc3, 0x56, 0x61, 0xe5, 0x67, 0xb5, 0x6b, 0x03,
	0x97, 0x70, 0x34, 0x08, 0x55, 0x4f, 0x31, 0x55, 0xa2, 0xae, 0x96, 0x16, 0x61, 0xf4, 0x0d, 0x34,
	0xe3, 0x26, 0xac, 0x46, 0x5f, 0x1f, 0xb4, 0x47, 0xed, 0x8c, 0x54, 0x38, 0xe1, 0xd0, 0xf7, 0x70,
	0x1c, 0x6d, 0x63, 0xc2, 0xd6, 0x6b, 0x4f, 0x46, 0x3e, 0x34, 0x55, 0xca, 0x32, 0x61, 0xbf, 0xd3,
	0xe0, 0xf3, 0x82, 0x40, 0x22, 0x60, 0xbe, 0xa0, 0xbb, 0x51, 0xc8, 0x82, 0xa6, 0x43, 0x84, 0x74,
	0xd8, 0x4a, 0x49, 0x64, 0xe0, 0x24, 0x0c, 0x99, 0xbb, 0xcd, 0x62, 0x41, 0x85, 0x50, 0xd2, 0xb4,
	0x70, 0x12, 0xa2, 0x6f, 0xe1, 0x68, 0xca, 0x30, 0x95, 0xfc, 0xf9, 0x8a, 0x2c, 0xfe, 0x60, 0xcb,
	0xa5, 0x12, 0xa4, 0x85, 0x0b, 0xa8, 0xfd, 0x5e, 0x03, 0x14, 0xdb, 0x79, 0xcf, 0x24, 0xdd, 0xa9,
	0xb3, 0xe7, 0xb0, 0x3f, 0x21, 0xbe, 0xeb, 0xb9, 0x44, 0xd2, 0xd8, 0xdc, 0x17, 0x00, 0xd9, 0x70,
	0x10, 0xb7, 0x11, 0xa9, 0x1b, 0x79, 0x9b, 0xc3, 0x50, 0x1f, 0xda, 0x71, 0x9c, 0xf1, 0x34, 0x0b,
	0xa1, 0x4b, 0x40, 0x91, 0x1f, 0xe2, 0xc1, 0x0b, 0xe6, 0x9c, 0xf8, 0x62, 0x49, 0xb9, 0xd5, 0x50,
	0xbd, 0x56, 0x30, 0xf6, 0x3f, 0x1a, 0x7c, 0x96, 0xeb, 0x77, 0x97, 0x46, 0x75, 0xa1, 0x3e, 0xa3,
	0x94, 0x8b, 0xb8, 0xd9, 0x28, 0x08, 0x4d, 0xfa, 0x99, 0x13, 0x5f, 0x52, 0x37, 0x31, 0x29, 0x0e,
	0xed, 0x0f, 0x35, 0x38, 0xb9, 0xf5, 0x85, 0x24, 0x8f, 0x8f, 0x77, 0x3e, 0x09, 0xc4, 0x03, 0x93,
	0x6f, 0x36, 0x60, 0x0c, 0x9d, 0x24, 0x47, 0x32, 0x78, 0x6a, 0xf9, 0xc1, 0x53, 0xa0, 0x71, 0x71,
	0x7d, 0xda, 0x92, 0x5e, 0x79, 0x3b, 0x8d, 0xdc, 0xed, 0x2c, 0xba, 0x57, 0xff, 0xb4, 0x7b, 0x8d,
	0xb2, 0x7b, 0xa9, 0x60, 0xcd, 0xac, 0x60, 0x5f, 0xc3, 0xe1, 0x84, 0xf9, 0x4b, 0x6f, 0xb5, 0xe1,
	0x44, 0x86, 0x8d, 0xb4, 0x14, 0x9b, 0x07, 0x43, 0xe7, 0x73, 0x40, 0xb4, 0x8f, 0x7d, 0x55, 0xa4,
	0x82, 0x49, 0x27, 0x1f, 0xbc, 0x4c, 0x3e, 0x7b, 0x0b, 0xa7, 0x25, 0xfd, 0x77, 0x7c, 0x73, 0x93,
	0xfb, 0xa9, 0xe7, 0xee, 0xa7, 0x7d, 0x0d, 0xc7, 0x73, 0x6f, 0x4d, 0xd9, 0x46, 0x4e, 0xd9, 0x5f,
	0x6f, 0x35, 0xdd, 0xbe, 0x01, 0x94, 0xcd, 0xf2, 0xc6, 0xad, 0x0f, 0xcb, 0x1f, 0x2d, 0x74, 0x02,
	0xa8, 0x00, 0xfd, 0xea, 0xf9, 0xe6, 0x5e, 0x15, 0x4e, 0xb6, 0xa6, 0x3e, 0x2c, 0x1f, 0xbf, 0x70,
	0x69, 0x01, 0x4a, 0x53, 0x14, 0x71, 0xb2, 0x35, 0xb5, 0xe1, 0xdf, 0x5a, 0xfa, 0x19, 0x43, 0x47,
	0x00, 0x0e, 0x5b, 0x85, 0x33, 0x96, 0xf8, 0xae, 0xb9, 0x87, 0xda, 0x8a, 0x9a, 0x32, 0x16, 0x98,
	0x1a, 0xb2, 0xa0, 0xeb, 0xb0, 0xd5, 0xd8, 0x75, 0xc3, 0xe3, 0x72, 0x4d, 0x03, 0x4e, 0x17, 0x44,
	0x52, 0xd7, 0xac, 0xa1, 0x33, 0x38, 0x0d, 0xc7, 0x38, 0x5d, 0xb3, 0x27, 0x5a, 0x20, 0xf5, 0x38,
	0xe7, 0x15, 0xe1, 0xdc, 0xa3, 0xdc, 0x34, 0x50, 0x17, 0x4c, 0x55, 0x23, 0x73, 0x52, 0xcc, 0xfa,
	0xe8, 0xff, 0x1a, 0x18, 0x98, 0x2c, 0x25, 0x72, 0xe0, 0x30, 0x37, 0xd3, 0xd1, 0x79, 0xa2, 0x61,
	0xd5, 0xb7, 0xb0, 0xf7, 0xe5, 0x2b, 0x6c, 0xec, 0xc9, 0x4f, 0xd0, 0xce, 0x8c, 0x1d, 0xd4, 0x4b,
	0xfd, 0x28, 0xcd, 0xde, 0xde, 0x59, 0x25, 0x17, 0xe7, 0xc1, 0xd0, 0x29, 0x9c, 0x58, 0x74, 0x91,
	0xac, 0xaf, 0x1e, 0x25, 0xbd, 0xaf, 0x5e, 0xe5, 0xe3, 0x9c, 0x13, 0x80, 0x97, 0x53, 0x84, 0xbe,
	0x48, 0x96, 0x97, 0xce, 0x67, 0xaf, 0x57, 0x45, 0x45, 0x49, 0xae, 0x5a, 0xbf, 0xc5, 0xff, 0x87,
	0x7e, 0x8f, 0x7e, 0x7f, 0xfc, 0x18, 0x00, 0x00, 0xff, 0xff, 0x32, 0xa9, 0xd0, 0xca, 0x2c, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftClient is the client API for Raft service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
	RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error)
	InstallSnapshot(ctx context.Context, in *InstallSnapshotRequest, opts ...grpc.CallOption) (*InstallSnapshotResponse, error)
	TimeoutNow(ctx context.Context, in *TimeoutNowRequest, opts ...grpc.CallOption) (*TimeoutNowResponse, error)
}

type raftClient struct {
	cc *grpc.ClientConn
}

func NewRaftClient(cc *grpc.ClientConn) RaftClient {
	return &raftClient{cc}
}

func (c *raftClient) AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := c.cc.Invoke(ctx, "/protos.Raft/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error) {
	out := new(RequestVoteResponse)
	err := c.cc.Invoke(ctx, "/protos.Raft/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) InstallSnapshot(ctx context.Context, in *InstallSnapshotRequest, opts ...grpc.CallOption) (*InstallSnapshotResponse, error) {
	out := new(InstallSnapshotResponse)
	err := c.cc.Invoke(ctx, "/protos.Raft/InstallSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) TimeoutNow(ctx context.Context, in *TimeoutNowRequest, opts ...grpc.CallOption) (*TimeoutNowResponse, error) {
	out := new(TimeoutNowResponse)
	err := c.cc.Invoke(ctx, "/protos.Raft/TimeoutNow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftServer is the server API for Raft service.
type RaftServer interface {
	AppendEntries(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error)
	RequestVote(context.Context, *RequestVoteRequest) (*RequestVoteResponse, error)
	InstallSnapshot(context.Context, *InstallSnapshotRequest) (*InstallSnapshotResponse, error)
	TimeoutNow(context.Context, *TimeoutNowRequest) (*TimeoutNowResponse, error)
}

// UnimplementedRaftServer can be embedded to have forward compatible implementations.
type UnimplementedRaftServer struct {
}

func (*UnimplementedRaftServer) AppendEntries(ctx context.Context, req *AppendEntriesRequest) (*AppendEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}
func (*UnimplementedRaftServer) RequestVote(ctx context.Context, req *RequestVoteRequest) (*RequestVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}
func (*UnimplementedRaftServer) InstallSnapshot(ctx context.Context, req *InstallSnapshotRequest) (*InstallSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallSnapshot not implemented")
}
func (*UnimplementedRaftServer) TimeoutNow(ctx context.Context, req *TimeoutNowRequest) (*TimeoutNowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TimeoutNow not implemented")
}

func RegisterRaftServer(s *grpc.Server, srv RaftServer) {
	s.RegisterService(&_Raft_serviceDesc, srv)
}

func _Raft_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Raft/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).AppendEntries(ctx, req.(*AppendEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Raft/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).RequestVote(ctx, req.(*RequestVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_InstallSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).InstallSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Raft/InstallSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).InstallSnapshot(ctx, req.(*InstallSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_TimeoutNow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeoutNowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).TimeoutNow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Raft/TimeoutNow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).TimeoutNow(ctx, req.(*TimeoutNowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Raft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Raft",
	HandlerType: (*RaftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntries",
			Handler:    _Raft_AppendEntries_Handler,
		},
		{
			MethodName: "RequestVote",
			Handler:    _Raft_RequestVote_Handler,
		},
		{
			MethodName: "InstallSnapshot",
			Handler:    _Raft_InstallSnapshot_Handler,
		},
		{
			MethodName: "TimeoutNow",
			Handler:    _Raft_TimeoutNow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}
